GENERALE:

modificare inclusione libreria socket.io prima della consegna (cambiare porta in 8000)

creare QRcode

accessibilità (scaricare chromevox come estensione e poi utilizzare la guida online: https://support.google.com/chromebook/answer/7031755#zippy=%2Cscegliere-il-testo-con-il-cursore)

installare multer (npm install --save multer)
 
installare: npm install webcam-easy (gestione fotocamera)

VITALI : non caricare interrail (per testare caricamento storia nell'ambiente autore)
VITALI : nel SistemaSolare c'è una attività disattivata

ACCESSIBILITA':
 PLAYER:
 - Appena si entra nella pagina dell'inserimento del nome, non legge "Torna alla pagina principale"
 - Appena incomincia la storia, la prima cosa che legge non è il testo della storia ma la zona pulsanti/inserisci campo risposta
 - Quando legge la storia non la legge tutta per intero ma legge una riga alla volta
 - Dopo aver cliccato il pulsante della risposta corretta, l'utente non capisce se è cambiata l'interfaccia. Inoltre dopo che l'interfaccia è cambiata 
   lo screen reader non legge dalla nuvoletta del racconto, ma legge il nuovo pulsante delle risposte che ha sostituito quello della risposta precedente
 - Dopo aver cliccato il pulsante della risposta sbagliata, l'utente non sa se quella è la risposta giusta o meno, perchè per capire che ha dato la risposta
   sbagliata dovrebbe scorrere tutti i pulsanti per poi trovare la nuvoletta del messaggio di incorraggiamento


BIANCA:
testare progetto su chrome, firefox, safari, opera, edge

modificare css titolo pagina ambiente valutatore
modificare punteggio risposte bottoni nella storia json
messaggi conclusivi più sofisticati (promozione)
modificare colore rosso dei player se valutatore si connette dopo
salvataggio file con immagine vuoto

MARTI:
commentare e pulire codice

ACCESSIBILITA': settare il cursore - capire come muoversi con freccia sx e dx - settare gli alt (+ settare gli attributi nell'html)
- cercare attributo per attribuire descrizione agli elementi della pagina (che cosa fa quell'elemento)
- cercare codice js per settare il cursore ogni volta che viene caricata un'attivita
- testare VoiceOver su chat
- usare focus() per settare il focus ad un elemento (se un elemento non è focalizzato utilizzare l'attributo tabindex="0";) => 
var domanda = document.getElementById('domanda'); 
        domanda.setAttribute('tabindex', '0'); //rende focalizzabile l'elemento (campi solo lettura non sono focalizzabili di default)
        domanda.focus(); //setta il focus ad un certo elemento
- usare role per settare il ruolo che ha un determinato tag html (in modo tale che lo screenReader lo interpreti in un certo modo)

aggiungere commento accessibilità nel html del player
modificare punteggio risposte bottoni nella storia json
"punteggio" : 3 (come campo nell'oggetto js "rispostebottoni")
messaggi conclusivi più sofisticati (promozione)
gestire css bottoni (spazio vuoto sotto)

CRI: 
"camporisposta": "strisce pedonali" (se camporisposta è vuoto -> checkbox, altrimenti textarea in cui inserire la risposta ----> se c'è una non c'è l'altra)
testare progetto su opera
messaggi conclusivi più sofisticati (promozione)
non caricare interrail (per testare caricamento storia nell'ambiente autore)
Visualizzazione del grafo delle transizioni da un'attività all'altra e da una missione all'altra nella storia
"punteggio" : 3 (come campo nell'oggetto js "rispostebottoni")
modificare punteggio risposte bottoni nella storia json
